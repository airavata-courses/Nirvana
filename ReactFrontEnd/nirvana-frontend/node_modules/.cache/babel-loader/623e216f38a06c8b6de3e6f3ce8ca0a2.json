{"ast":null,"code":"import _slicedToArray from\"/home/raj/Desktop/Data/Nirvana/alpha-testing-branch/Nirvana/ReactFrontEnd/nirvana-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'date-fns';import React,{useState,useContext}from'react';import Grid from'@material-ui/core/Grid';import DateFnsUtils from'@date-io/date-fns';import{WeatherContext}from'../Contexts/weather_context';import{MuiPickersUtilsProvider,KeyboardTimePicker,KeyboardDatePicker}from'@material-ui/pickers';import{TextField,Button}from'@material-ui/core';import cookie from'react-cookies';import axios,*as others from'axios';import{api_gateway_url}from\"../constants/constants\";export default function DatePickers(){var _useState=useState(new Date()),_useState2=_slicedToArray(_useState,2),from_date=_useState2[0],setFromDate=_useState2[1];var _useState3=useState(new Date()),_useState4=_slicedToArray(_useState3,2),to_date=_useState4[0],setToDate=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),city_name=_useState6[0],setCityName=_useState6[1];var _useContext=useContext(WeatherContext),_useContext2=_slicedToArray(_useContext,2),dailyWeather=_useContext2[0],setWeather=_useContext2[1];var updateFromDate=function updateFromDate(date){setFromDate(Date.parse(date));};var updateToDate=function updateToDate(date){setToDate(Date.parse(date));};var updateCityName=function updateCityName(e){setCityName(e.target.value);};var lat=0;var lon=0;var temprature=[1];var precipitation=[1];var humidity=[1];var windSpeed=[1];var getData=function getData(headers,payload,new_from_date,new_to_date){fetch(api_gateway_url+'retrieveData',{method:'POST',headers:headers,body:JSON.stringify(payload),async:true}).then(function(response){if(response.ok){response.json().then(function(json){console.log(\"response 1 data\");console.log(json);lat=json.latitude;lon=json.longitude;// make array of data\nsetWeather(json);});var dataToSend={from_date:JSON.stringify({year:new_from_date.getFullYear(),month:new_from_date.getMonth()+1,day:new_from_date.getDate()}),to_date:JSON.stringify({year:new_to_date.getFullYear(),month:new_to_date.getMonth()+1,day:new_to_date.getDate()}),city_name:city_name,records:JSON.stringify({temprature:temprature,precipitation:precipitation,humidity:humidity,wind_speed:windSpeed})};getDataFuture(headers,{\"lat\":lat,\"lon\":lon},dataToSend);}else{console.log(\"server error -- response 1\");}});};var getDataViz=function getDataViz(headers,payload){fetch(api_gateway_url+'retrieveDataViz',{method:'POST',headers:headers,body:JSON.stringify(payload),async:true}).then(function(response){if(response.ok){response.json().then(function(json){console.log(\"response 3 data\");console.log(json);// make array of data\n});}else{console.log(\"server error -- response 3\");}});};var getDataFuture=function getDataFuture(headers,payload,payload_for_viz){console.log(payload);fetch(api_gateway_url+'retrieveDataFuture',{method:'POST',headers:headers,body:JSON.stringify(payload),async:true}).then(function(response){if(response.ok){response.json().then(function(json){console.log(\"response 2 data\");console.log(json);// make array of data\n});getDataViz(headers,payload_for_viz);}else{console.log(\"server error -- response 2\");}});};var handleDataRetrieval=function handleDataRetrieval(){console.log(from_date);var jwt=cookie.load('jwt');var session_id=cookie.load('session_id');var new_from_date=new Date(from_date);var new_to_date=new Date(to_date);var email=cookie.load(\"email\");var payload={from_date:JSON.stringify({year:new_from_date.getFullYear(),month:new_from_date.getMonth()+1,day:new_from_date.getDate()}),to_date:JSON.stringify({year:new_to_date.getFullYear(),month:new_to_date.getMonth()+1,day:new_to_date.getDate()}),city_name:city_name};var headers={'Accept':'application/json','Content-Type':'application/json','email':email,'Authorization':jwt,// insert session id here\n'session_id':session_id};console.log(payload);var session_payload={\"user_action\":city_name+\" \"+new_from_date+\" \"+new_to_date};getData(headers,payload,new_from_date,new_to_date);};return React.createElement(MuiPickersUtilsProvider,{utils:DateFnsUtils},React.createElement(TextField,{id:\"outlined-basic\",label:\"Search City\",onChange:updateCityName,variant:\"outlined\"}),React.createElement(Grid,{container:true,justify:\"space-around\"},React.createElement(KeyboardDatePicker,{margin:\"normal\",id:\"date-picker-dialog\",name:\"from_date\",label:\"Date picker dialog\",format:\"MM/dd/yyyy\",value:from_date||new Date(),onChange:updateFromDate,KeyboardButtonProps:{'aria-label':'change date'}}),React.createElement(KeyboardDatePicker,{margin:\"normal\",id:\"date-picker-dialog\",name:\"to_date\",label:\"Date picker dialog\",format:\"MM/dd/yyyy\",value:to_date||new Date(),onChange:updateToDate,KeyboardButtonProps:{'aria-label':'change date'}}),React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:handleDataRetrieval},\"Submit\")));}","map":{"version":3,"sources":["/home/raj/Desktop/Data/Nirvana/alpha-testing-branch/Nirvana/ReactFrontEnd/nirvana-frontend/src/components/datapicker.js"],"names":["React","useState","useContext","Grid","DateFnsUtils","WeatherContext","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","TextField","Button","cookie","axios","others","api_gateway_url","DatePickers","Date","from_date","setFromDate","to_date","setToDate","city_name","setCityName","dailyWeather","setWeather","updateFromDate","date","parse","updateToDate","updateCityName","e","target","value","lat","lon","temprature","precipitation","humidity","windSpeed","getData","headers","payload","new_from_date","new_to_date","fetch","method","body","JSON","stringify","async","then","response","ok","json","console","log","latitude","longitude","dataToSend","year","getFullYear","month","getMonth","day","getDate","records","wind_speed","getDataFuture","getDataViz","payload_for_viz","handleDataRetrieval","jwt","load","session_id","email","session_payload"],"mappings":"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","sourcesContent":["import 'date-fns';\nimport React, {useState, useContext} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {WeatherContext} from '../Contexts/weather_context';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { TextField, Button } from '@material-ui/core';\nimport cookie from 'react-cookies'\nimport axios, * as others from 'axios';\nimport { api_gateway_url } from \"../constants/constants\";\nexport default function DatePickers() {\n  const [from_date, setFromDate] = useState(new Date());\n  const [to_date, setToDate] = useState(new Date());\n  const [city_name, setCityName] = useState('');\n  const [dailyWeather, setWeather] = useContext(WeatherContext);\n\nconst updateFromDate = date => {\n  setFromDate(Date.parse(date));\n}\n\n\nconst updateToDate = date => {\n  setToDate(Date.parse(date));\n}\n\n\nconst updateCityName = e => {\n  setCityName(e.target.value);\n}\n\n\nlet lat = 0;\nlet lon = 0;\nlet temprature  = [1];\nlet precipitation = [1];\nlet humidity = [1];\nlet windSpeed = [1];\nconst getData = (headers, payload, new_from_date, new_to_date)=>{\n  fetch(api_gateway_url + 'retrieveData', {\n    method: 'POST',\n    headers: headers,\n    body:JSON.stringify(payload),\n    async:true\n  }).then(response => {\n    if (response.ok) {\n      response.json().then(json => {\n        console.log(\"response 1 data\")\n        console.log(json)\n        lat = json.latitude\n        lon = json.longitude\n        // make array of data\n        setWeather(json)\n      });\n      let dataToSend = {\n        from_date: JSON.stringify({\n          year: new_from_date.getFullYear(),\n          month: new_from_date.getMonth()+1,\n          day: new_from_date.getDate()\n        }),\n        to_date: JSON.stringify({\n          year: new_to_date.getFullYear(),\n          month: new_to_date.getMonth()+1,\n          day: new_to_date.getDate()\n        }),\n        city_name: city_name,\n        records: JSON.stringify({\n          temprature : temprature,\n          precipitation : precipitation,\n          humidity : humidity,\n          wind_speed : windSpeed\n        })\n      }\n      getDataFuture(headers,{\"lat\":lat, \"lon\":lon},dataToSend)\n\n    }\n    else {\n      console.log(\"server error -- response 1\")\n    }\n  })\n}\n\n\nconst getDataViz = (headers, payload)=>{\n  fetch(api_gateway_url + 'retrieveDataViz', {\n    method: 'POST',\n    headers: headers,\n    body:JSON.stringify(payload),\n    async:true\n  }).then(response => {\n    if (response.ok) {\n      response.json().then(json => {\n        console.log(\"response 3 data\")\n        console.log(json)\n        // make array of data\n      });\n    }\n    else {\n      console.log(\"server error -- response 3\")\n    }\n  })\n}\n\n\nconst getDataFuture = (headers, payload,payload_for_viz) => {\n  console.log(payload)\n  fetch(api_gateway_url + 'retrieveDataFuture', {\n    method: 'POST',\n    headers: headers,\n    body:JSON.stringify(payload),\n    async:true\n  }).then(response => {\n    if (response.ok) {\n      response.json().then(json => {\n        console.log(\"response 2 data\")\n        console.log(json)\n        \n        // make array of data\n      });\n      getDataViz(headers,payload_for_viz)\n    }\n    else {\n      console.log(\"server error -- response 2\")\n    }\n  })\n}\n\nconst handleDataRetrieval = ()=>{\n  console.log(from_date)\n  const jwt = cookie.load('jwt');\n\n  const session_id = cookie.load('session_id');\n\n  var new_from_date = new Date(from_date)\n  var new_to_date = new Date(to_date)\n  var email = cookie.load(\"email\")\n  const payload = {\n    from_date: JSON.stringify({\n      year: new_from_date.getFullYear(),\n      month: new_from_date.getMonth()+1,\n      day: new_from_date.getDate()\n    }),\n    to_date: JSON.stringify({\n      year: new_to_date.getFullYear(),\n      month: new_to_date.getMonth()+1,\n      day: new_to_date.getDate()\n    }),\n    city_name: city_name\n  }\n  const headers = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    'email': email,\n    'Authorization': jwt,\n    // insert session id here\n    'session_id': session_id\n  }\n  console.log(payload);\n  let session_payload = {\n    \"user_action\": city_name + \" \" + new_from_date + \" \" + new_to_date,\n  }\n\n  getData(headers, payload, new_from_date, new_to_date);\n}\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    \n    <TextField id=\"outlined-basic\" \n      label=\"Search City\" \n      onChange={updateCityName}\n      variant=\"outlined\"/>\n\n      <Grid container justify=\"space-around\">\n        <KeyboardDatePicker\n          margin=\"normal\"\n          id=\"date-picker-dialog\"\n          name = \"from_date\"\n          label=\"Date picker dialog\"\n          format=\"MM/dd/yyyy\"\n          value={from_date || new Date()}\n          onChange={updateFromDate}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        <KeyboardDatePicker\n          margin=\"normal\"\n          id=\"date-picker-dialog\"\n          name = \"to_date\"\n          label=\"Date picker dialog\"\n          format=\"MM/dd/yyyy\"\n          value={to_date || new Date()}\n          onChange={updateToDate}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={handleDataRetrieval}>\n          Submit\n        </Button>\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}