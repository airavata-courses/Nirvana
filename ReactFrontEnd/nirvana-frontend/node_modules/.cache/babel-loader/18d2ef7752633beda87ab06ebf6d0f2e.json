{"ast":null,"code":"import _slicedToArray from \"/home/raj/Desktop/Data/Nirvana/alpha-testing-branch/Nirvana/ReactFrontEnd/nirvana-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/raj/Desktop/Data/Nirvana/alpha-testing-branch/Nirvana/ReactFrontEnd/nirvana-frontend/src/Contexts/weather_context.js\";\nimport React, { useState, createContext } from \"react\";\nexport const WeatherContext = createContext();\nexport const WeatherProvider = props => {\n  const _useState = useState({\n    latitude: 10.0,\n    longitude: 10.0,\n    center: {\n      lat: 10.0,\n      lng: 10.0\n    },\n    weather: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        dailyWeather = _useState2[0],\n        setWeather = _useState2[1];\n\n  return React.createElement(WeatherContext.Provider, {\n    value: [dailyWeather, setWeather],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/home/raj/Desktop/Data/Nirvana/alpha-testing-branch/Nirvana/ReactFrontEnd/nirvana-frontend/src/Contexts/weather_context.js"],"names":["React","useState","createContext","WeatherContext","WeatherProvider","props","latitude","longitude","center","lat","lng","weather","dailyWeather","setWeather","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AACA,OAAO,MAAMC,cAAc,GAAGD,aAAa,EAApC;AAEP,OAAO,MAAME,eAAe,GAAGC,KAAK,IAAI;AAAA,oBACDJ,QAAQ,CAAC;AACxCK,IAAAA,QAAQ,EAAE,IAD8B;AAExCC,IAAAA,SAAS,EAAE,IAF6B;AAGxCC,IAAAA,MAAM,EAAE;AACJC,MAAAA,GAAG,EAAE,IADD;AAEJC,MAAAA,GAAG,EAAE;AAFD,KAHgC;AAOxCC,IAAAA,OAAO,EAAC;AAPgC,GAAD,CADP;AAAA;AAAA,QAC7BC,YAD6B;AAAA,QACfC,UADe;;AAYpC,SAAO,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE,CAACD,YAAD,EAAeC,UAAf,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFR,KAAK,CAACS,QADJ,CAAP;AAGH,CAfM","sourcesContent":["import React, { useState, createContext } from \"react\";\nexport const WeatherContext = createContext();\n\nexport const WeatherProvider = props => {\n    const [dailyWeather, setWeather] = useState({\n        latitude: 10.0,\n        longitude: 10.0,\n        center: {\n            lat: 10.0,\n            lng: 10.0\n        },\n        weather:{}\n    });\n\n\n    return <WeatherContext.Provider value={[dailyWeather, setWeather]}>\n        {props.children}\n    </WeatherContext.Provider>\n}"]},"metadata":{},"sourceType":"module"}