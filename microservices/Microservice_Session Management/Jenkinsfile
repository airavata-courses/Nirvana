pipeline {
    agent any
    stages {
        stage('Installing dependencies') {
            steps {                 
                sh '''
                    cd "microservices/Microservice_Session Management"
                    wget -q https://packages.microsoft.com/config/ubuntu/19.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
                    sudo dpkg -i packages-microsoft-prod.deb     
                    sudo apt-get update
                    sudo apt-get --assume-yes install apt-transport-https
                    sudo apt-get update
                    sudo apt-get --assume-yes install dotnet-sdk-3.1
                    sudo dotnet build 
                    '''
             }
        }
        stage('Building Docker image') {
            steps {
            sh '''
                cd "microservices/Microservice_Session Management"
                sudo apt --assume-yes install docker.io
                sudo systemctl start docker
                sudo systemctl enable docker        
                sudo docker build -t session-management-service .
                echo "Docker build successful"
            '''    
            }
        }
        stage('Pushing to Docker hub') {
            steps {
            sh '''
                sudo docker login --username=juhideshkar30 --password=qwertyuiop12345
                sudo docker tag session-management-service juhideshkar30/session_management_service                
                sudo docker push juhideshkar30/session_management_service
            '''    
            }
        }
        stage('SSH call to Kubernetes master') {
            steps {
            sh '''
                cd "microservices/Microservice_Session Management" 
                chmod 400 nirvana.pem
                ssh -o StrictHostKeyChecking=no -i nirvana.pem ubuntu@149.165.169.31 uptime
                ssh -i nirvana.pem ubuntu@149.165.169.31 " rm -rf Nirvana &&
                git clone https://github.com/airavata-courses/Nirvana.git &&
                cd Nirvana &&
                git pull &&
                git checkout Kubernetes_files &&
                cd yaml_files/microservice_session_management && 
                export KUBECONFIG=/etc/kubernetes/admin.conf &&
                kubectl apply -f config.yaml"
            '''    
            }
        }
    }
}
